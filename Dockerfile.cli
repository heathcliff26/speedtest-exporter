###############################################################################
# BEGIN build-stage
# Compile the binary
FROM --platform=$BUILDPLATFORM docker.io/library/golang:1.25.1 AS build-stage

ARG BUILDPLATFORM
ARG TARGETARCH

WORKDIR /app

COPY . ./

RUN GOOS=linux GOARCH="${TARGETARCH}" hack/build.sh

#
# END build-stage
###############################################################################

###############################################################################
# BEGIN fetch-stage
# Fetch the speedtest-cli binary
FROM --platform=$BUILDPLATFORM docker.io/library/golang:1.25.1 AS fetch-stage

ARG BUILDPLATFORM
ARG TARGETARCH
ARG SPEEDTEST_VERSION=1.2.0

WORKDIR /

RUN case "${TARGETARCH}" in \
        'amd64') export ARCHITECTURE="x86_64" ;; \
        'arm64') export ARCHITECTURE="aarch64" ;; \
    esac \
    && curl -SL -o speedtest.tgz "https://install.speedtest.net/app/cli/ookla-speedtest-${SPEEDTEST_VERSION}-linux-${ARCHITECTURE}.tgz"

RUN tar -xzf speedtest.tgz -C / speedtest

# END fetch-stage
###############################################################################

###############################################################################
# BEGIN combine-stage
# Combine all outputs, to enable single layer copy for the final image
FROM scratch AS combine-stage

COPY --from=build-stage /app/bin/speedtest-exporter /

COPY --from=fetch-stage /speedtest /

COPY configs/dockerfile-cli.yaml /config.yaml

#
# END combine-stage
###############################################################################

###############################################################################
# BEGIN final-stage
# Create final docker image
FROM docker.io/library/alpine:3.22.1@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1 AS final-stage

WORKDIR /

COPY --from=combine-stage / /

EXPOSE 8080

USER 1001

ENTRYPOINT ["/speedtest-exporter"]
CMD ["-config", "/config.yaml"]

#
# END final-stage
###############################################################################
